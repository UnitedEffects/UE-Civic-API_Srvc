service: ${file(./.env/env.${self:provider.env}.json):NAME}

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${file(./.env/env.${self:provider.env}.json):NODE_ENV}
  env: ${env:SLS_ENV, 'test'}
  region: us-east-1
  environment:
    NODE_ENV: ${file(./.env/env.${self:provider.env}.json):NODE_ENV}
    SWAGGER: ${file(./.env/env.${self:provider.env}.json):SWAGGER}
    PROTOCOL: ${file(./.env/env.${self:provider.env}.json):PROTOCOL}
    MONGO: ${file(./.env/env.${self:provider.env}.json):MONGO}
    REPLICA: ${file(./.env/env.${self:provider.env}.json):REPLICA}
    DOMAIN: ${file(./.env/env.${self:provider.env}.json):DOMAIN}
    PRODUCT_SLUG: ${file(./.env/env.${self:provider.env}.json):PRODUCT_SLUG}
    IMPLEMENTER: ${file(./.env/env.${self:provider.env}.json):IMPLEMENTER}
    WEBHOOK: ${file(./.env/env.${self:provider.env}.json):WEBHOOK}
    MAILER: ${file(./.env/env.${self:provider.env}.json):MAILER}
    STANDARD: ${file(./.env/env.${self:provider.env}.json):STANDARD}
    STRIPE: ${file(./.env/env.${self:provider.env}.json):STRIPE}

package:
  exclude:
    - src/**

plugins:
 - serverless-domain-manager
 - serverless-apigw-binary

custom:
  customDomain:
    domainName: ${file(./.env/env.${self:provider.env}.json):SWAGGER}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  apigwBinary:
    types:
      - 'multipart/form-data'
      - 'image/jpeg'
      - 'image/png'

functions:
  app:
    handler: dist/bin/slsapp.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'